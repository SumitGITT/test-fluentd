
# FROM mcr.microsoft.com/windows/servercore:ltsc2019

# LABEL maintainer "Fluentd developers <fluentd@googlegroups.com>"
# LABEL Description="Fluentd docker image" Vendor="Fluent Organization" Version="1.10.0"

# # Do not split this into multiple RUN!
# # Docker creates a layer for every RUN-Statement
# RUN powershell -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"

# # Fluentd depends on cool.io whose fat gem is only available for Ruby < 2.5, so need to specify --platform ruby when install Ruby > 2.5 and install msys2 to get dev tools
# # NOTE: For avoiding stalling with docker build on windows, we must use latest version of msys2.
# RUN choco install -y ruby --version 2.6.5.1 --params "'/InstallDir:C:\ruby26'" \
# && choco install -y msys2 --version 20210604.0.0 --params "'/NoPath /NoUpdate /InstallDir:C:\ruby26\msys64'"
# RUN refreshenv; \
# ridk install 2 3; \
# echo gem: --no-document >> C:\ProgramData\gemrc \
# gem install bundler; \
# bundle config build.certstore_c --with-cflags="-Wno-attributes"; \
# bundle config build.yajl-ruby --with-cflags="-Wno-attributes"; \
# bundle config build.oj --with-cflags="-Wno-attributes"; \
# gem install cool.io -v 1.5.4 --platform ruby; \
# gem install oj -v 3.3.10; \
# gem install json -v 2.2.0; \
# gem install fluentd -v 1.10.0; \
# gem install win32-service -v 2.1.6; \
# gem install win32-ipc -v 0.7.0; \
# gem install win32-event -v 0.6.3; \
# gem install windows-pr -v 1.2.6; \
# gem install aws-sdk-cloudwatchlogs; \
# gem install fluent-plugin-concat; \
# gem install fluent-plugin-rewrite-tag-filter; \
# gem install fluent-plugin-multi-format-parser; \
# gem install fluent-plugin-cloudwatch-logs; \
# gem sources --clear-all

# # Remove gem cache and chocolatey
# #RUN powershell -Command "Remove-Item -Force C:\ruby26\lib\ruby\gems\2.6.0\cache\*.gem; Remove-Item -Recurse -Force 'C:\ProgramData\chocolatey'"

# COPY fluent.conf /fluent/conf/fluent.conf

# ENV FLUENTD_CONF="fluent.conf"

# EXPOSE 24224 5140

# ENTRYPOINT ["cmd", "/k", "fluentd", "-c", "C:\\fluent\\conf\\fluent.conf"]
# #ENTRYPOINT ["powershell", "-command", "fluentd"]







#####################################
#https://github.com/fluent/fluentd-docker-image/blob/master/v1.4/windows/Dockerfile

# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY, USE /Dockerfile.template.erb

FROM mcr.microsoft.com/windows/servercore:ltsc2019
LABEL maintainer "Fluentd developers <fluentd@googlegroups.com>"
LABEL Description="Fluentd docker image" Vendor="Fluent Organization" Version="1.14.1"

# Do not split this into multiple RUN!
# Docker creates a layer for every RUN-Statement
RUN powershell -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"

# Fluentd depends on cool.io whose fat gem is only available for Ruby < 2.5, so need to specify --platform ruby when install Ruby > 2.5 and install msys2 to get dev tools
# NOTE: For avoiding stalling with docker build on windows, we must use latest version of msys2.
RUN choco install -y ruby --version 2.7.3 --params "'/InstallDir:C:\ruby27'" \
&& choco install -y msys2 --version 20210604.0.0 --params "'/NoPath /NoUpdate /InstallDir:C:\ruby27\msys64'"
RUN refreshenv \
&& ridk install 3 \
&& echo gem: --no-document >> C:\ProgramData\gemrc \
&& gem install cool.io -v 1.5.4 --platform ruby \
&& gem install oj -v 3.3.10 \
&& gem install json -v 2.2.0 \
&& gem install fluentd -v 1.14.1 \
&& gem install win32-service -v 2.1.6 \
&& gem install win32-ipc -v 0.7.0 \
&& gem install win32-event -v 0.6.3 \
&& gem install windows-pr -v 1.2.6 \
&& gem sources --clear-all

# Remove gem cache and chocolatey
#RUN powershell -Command "Remove-Item -Force C:\ruby27\lib\ruby\gems\2.6.0\cache\*.gem; Remove-Item -Recurse -Force 'C:\ProgramData\chocolatey'"

#ONBUILD COPY fluent.conf /fluent/conf/fluent.conf
COPY fluent.conf /fluent/conf/fluent.conf

ENV FLUENTD_CONF="fluent.conf"

EXPOSE 24224 5140

ENTRYPOINT ["cmd", "/k", "fluentd", "--config", "C:\\fluent\\conf\\fluent.conf"]
